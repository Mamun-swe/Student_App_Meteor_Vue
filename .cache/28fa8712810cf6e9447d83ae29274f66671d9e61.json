{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue","filename":"/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue","passPerPreset":false,"envName":"development","cwd":"/media/mamun/Tools/Meteor_Vue/crud_app","root":"/media/mamun/Tools/Meteor_Vue/crud_app","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue"}},"code":"var multiselectMixin;\nmodule.link(\"./multiselectMixin\", {\n  \"default\": function (v) {\n    multiselectMixin = v;\n  }\n}, 0);\nvar pointerMixin;\nmodule.link(\"./pointerMixin\", {\n  \"default\": function (v) {\n    pointerMixin = v;\n  }\n}, 1);\nmodule.exportDefault({\n  name: 'vue-multiselect',\n  mixins: [multiselectMixin, pointerMixin],\n  props: {\n    /**\n     * name attribute to match optional label element\n     * @default ''\n     * @type {String}\n     */\n    name: {\n      type: String,\n      \"default\": ''\n    },\n\n    /**\n     * String to show when pointing to an option\n     * @default 'Press enter to select'\n     * @type {String}\n     */\n    selectLabel: {\n      type: String,\n      \"default\": 'Press enter to select'\n    },\n\n    /**\n     * String to show when pointing to an option\n     * @default 'Press enter to select'\n     * @type {String}\n     */\n    selectGroupLabel: {\n      type: String,\n      \"default\": 'Press enter to select group'\n    },\n\n    /**\n     * String to show next to selected option\n     * @default 'Selected'\n     * @type {String}\n     */\n    selectedLabel: {\n      type: String,\n      \"default\": 'Selected'\n    },\n\n    /**\n     * String to show when pointing to an already selected option\n     * @default 'Press enter to remove'\n     * @type {String}\n     */\n    deselectLabel: {\n      type: String,\n      \"default\": 'Press enter to remove'\n    },\n\n    /**\n     * String to show when pointing to an already selected option\n     * @default 'Press enter to remove'\n     * @type {String}\n     */\n    deselectGroupLabel: {\n      type: String,\n      \"default\": 'Press enter to deselect group'\n    },\n\n    /**\n     * Decide whether to show pointer labels\n     * @default true\n     * @type {Boolean}\n     */\n    showLabels: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * Limit the display of selected options. The rest will be hidden within the limitText string.\n     * @default 99999\n     * @type {Integer}\n     */\n    limit: {\n      type: Number,\n      \"default\": 99999\n    },\n\n    /**\n     * Sets maxHeight style value of the dropdown\n     * @default 300\n     * @type {Integer}\n     */\n    maxHeight: {\n      type: Number,\n      \"default\": 300\n    },\n\n    /**\n     * Function that process the message shown when selected\n     * elements pass the defined limit.\n     * @default 'and * more'\n     * @param {Int} count Number of elements more than limit\n     * @type {Function}\n     */\n    limitText: {\n      type: Function,\n      \"default\": function (count) {\n        return \"and \" + count + \" more\";\n      }\n    },\n\n    /**\n     * Set true to trigger the loading spinner.\n     * @default False\n     * @type {Boolean}\n     */\n    loading: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Disables the multiselect if true.\n     * @default false\n     * @type {Boolean}\n     */\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Fixed opening direction\n     * @default ''\n     * @type {String}\n     */\n    openDirection: {\n      type: String,\n      \"default\": ''\n    },\n\n    /**\n     * Shows slot with message about empty options\n     * @default true\n     * @type {Boolean}\n     */\n    showNoOptions: {\n      type: Boolean,\n      \"default\": true\n    },\n    showNoResults: {\n      type: Boolean,\n      \"default\": true\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  computed: {\n    isSingleLabelVisible: function () {\n      return (this.singleValue || this.singleValue === 0) && (!this.isOpen || !this.searchable) && !this.visibleValues.length;\n    },\n    isPlaceholderVisible: function () {\n      return !this.internalValue.length && (!this.searchable || !this.isOpen);\n    },\n    visibleValues: function () {\n      return this.multiple ? this.internalValue.slice(0, this.limit) : [];\n    },\n    singleValue: function () {\n      return this.internalValue[0];\n    },\n    deselectLabelText: function () {\n      return this.showLabels ? this.deselectLabel : '';\n    },\n    deselectGroupLabelText: function () {\n      return this.showLabels ? this.deselectGroupLabel : '';\n    },\n    selectLabelText: function () {\n      return this.showLabels ? this.selectLabel : '';\n    },\n    selectGroupLabelText: function () {\n      return this.showLabels ? this.selectGroupLabel : '';\n    },\n    selectedLabelText: function () {\n      return this.showLabels ? this.selectedLabel : '';\n    },\n    inputStyle: function () {\n      if (this.searchable || this.multiple && this.value && this.value.length) {\n        // Hide input by setting the width to 0 allowing it to receive focus\n        return this.isOpen ? {\n          width: '100%'\n        } : {\n          width: '0',\n          position: 'absolute',\n          padding: '0'\n        };\n      }\n    },\n    contentStyle: function () {\n      return this.options.length ? {\n        display: 'inline-block'\n      } : {\n        display: 'block'\n      };\n    },\n    isAbove: function () {\n      if (this.openDirection === 'above' || this.openDirection === 'top') {\n        return true;\n      } else if (this.openDirection === 'below' || this.openDirection === 'bottom') {\n        return false;\n      } else {\n        return this.preferredOpenDirection === 'above';\n      }\n    },\n    showSearchInput: function () {\n      return this.searchable && (this.hasSingleSelectedSlot && (this.visibleSingleValue || this.visibleSingleValue === 0) ? this.isOpen : true);\n    }\n  }\n});","map":{"version":3,"sources":["/media/mamun/Tools/Meteor_Vue/crud_app/node_modules/vue-multiselect/src/Multiselect.vue"],"names":["multiselectMixin","module","link","v","pointerMixin","exportDefault","name","mixins","props","type","String","selectLabel","selectGroupLabel","selectedLabel","deselectLabel","deselectGroupLabel","showLabels","Boolean","limit","Number","maxHeight","limitText","Function","count","loading","disabled","openDirection","showNoOptions","showNoResults","tabindex","computed","isSingleLabelVisible","singleValue","isOpen","searchable","visibleValues","length","isPlaceholderVisible","internalValue","multiple","slice","deselectLabelText","deselectGroupLabelText","selectLabelText","selectGroupLabelText","selectedLabelText","inputStyle","value","width","position","padding","contentStyle","options","display","isAbove","preferredOpenDirection","showSearchInput","hasSingleSelectedSlot","visibleSingleValue"],"mappings":"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","sourcesContent":["\nimport multiselectMixin from './multiselectMixin'\nimport pointerMixin from './pointerMixin'\n\nexport default {\n  name: 'vue-multiselect',\n  mixins: [multiselectMixin, pointerMixin],\n  props: {\n    /**\n     * name attribute to match optional label element\n     * @default ''\n     * @type {String}\n     */\n    name: {\n      type: String,\n      default: ''\n    },\n    /**\n     * String to show when pointing to an option\n     * @default 'Press enter to select'\n     * @type {String}\n     */\n    selectLabel: {\n      type: String,\n      default: 'Press enter to select'\n    },\n    /**\n     * String to show when pointing to an option\n     * @default 'Press enter to select'\n     * @type {String}\n     */\n    selectGroupLabel: {\n      type: String,\n      default: 'Press enter to select group'\n    },\n    /**\n     * String to show next to selected option\n     * @default 'Selected'\n     * @type {String}\n     */\n    selectedLabel: {\n      type: String,\n      default: 'Selected'\n    },\n    /**\n     * String to show when pointing to an already selected option\n     * @default 'Press enter to remove'\n     * @type {String}\n     */\n    deselectLabel: {\n      type: String,\n      default: 'Press enter to remove'\n    },\n    /**\n     * String to show when pointing to an already selected option\n     * @default 'Press enter to remove'\n     * @type {String}\n     */\n    deselectGroupLabel: {\n      type: String,\n      default: 'Press enter to deselect group'\n    },\n    /**\n     * Decide whether to show pointer labels\n     * @default true\n     * @type {Boolean}\n     */\n    showLabels: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Limit the display of selected options. The rest will be hidden within the limitText string.\n     * @default 99999\n     * @type {Integer}\n     */\n    limit: {\n      type: Number,\n      default: 99999\n    },\n    /**\n     * Sets maxHeight style value of the dropdown\n     * @default 300\n     * @type {Integer}\n     */\n    maxHeight: {\n      type: Number,\n      default: 300\n    },\n    /**\n     * Function that process the message shown when selected\n     * elements pass the defined limit.\n     * @default 'and * more'\n     * @param {Int} count Number of elements more than limit\n     * @type {Function}\n     */\n    limitText: {\n      type: Function,\n      default: count => `and ${count} more`\n    },\n    /**\n     * Set true to trigger the loading spinner.\n     * @default False\n     * @type {Boolean}\n     */\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Disables the multiselect if true.\n     * @default false\n     * @type {Boolean}\n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Fixed opening direction\n     * @default ''\n     * @type {String}\n     */\n    openDirection: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Shows slot with message about empty options\n     * @default true\n     * @type {Boolean}\n     */\n    showNoOptions: {\n      type: Boolean,\n      default: true\n    },\n    showNoResults: {\n      type: Boolean,\n      default: true\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    isSingleLabelVisible () {\n      return (\n        (this.singleValue || this.singleValue === 0) &&\n        (!this.isOpen || !this.searchable) &&\n        !this.visibleValues.length\n      )\n    },\n    isPlaceholderVisible () {\n      return !this.internalValue.length && (!this.searchable || !this.isOpen)\n    },\n    visibleValues () {\n      return this.multiple ? this.internalValue.slice(0, this.limit) : []\n    },\n    singleValue () {\n      return this.internalValue[0]\n    },\n    deselectLabelText () {\n      return this.showLabels ? this.deselectLabel : ''\n    },\n    deselectGroupLabelText () {\n      return this.showLabels ? this.deselectGroupLabel : ''\n    },\n    selectLabelText () {\n      return this.showLabels ? this.selectLabel : ''\n    },\n    selectGroupLabelText () {\n      return this.showLabels ? this.selectGroupLabel : ''\n    },\n    selectedLabelText () {\n      return this.showLabels ? this.selectedLabel : ''\n    },\n    inputStyle () {\n      if (\n        this.searchable ||\n        (this.multiple && this.value && this.value.length)\n      ) {\n        // Hide input by setting the width to 0 allowing it to receive focus\n        return this.isOpen\n          ? { width: '100%' }\n          : { width: '0', position: 'absolute', padding: '0' }\n      }\n    },\n    contentStyle () {\n      return this.options.length\n        ? { display: 'inline-block' }\n        : { display: 'block' }\n    },\n    isAbove () {\n      if (this.openDirection === 'above' || this.openDirection === 'top') {\n        return true\n      } else if (\n        this.openDirection === 'below' ||\n        this.openDirection === 'bottom'\n      ) {\n        return false\n      } else {\n        return this.preferredOpenDirection === 'above'\n      }\n    },\n    showSearchInput () {\n      return (\n        this.searchable &&\n        (this.hasSingleSelectedSlot &&\n        (this.visibleSingleValue || this.visibleSingleValue === 0)\n          ? this.isOpen\n          : true)\n      )\n    }\n  }\n}\n"]},"sourceType":"module","hash":"28fa8712810cf6e9447d83ae29274f66671d9e61"}
